<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Ding Luo</title>
        <link>dingdl.github.io/posts/</link>
        <description>Recent content in Posts on Ding Luo</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 22 Feb 2020 00:00:00 +0000</lastBuildDate>
        <atom:link href="dingdl.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>posts[0]</title>
            <link>dingdl.github.io/posts/2020/02/posts0/</link>
            <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
            
            <guid>dingdl.github.io/posts/2020/02/posts0/</guid>
            <description>Recently I have found the motto below very motivating, which was quoted by one of our team members when trying to resolve a comment on his pull request.
So let&amp;rsquo;s kick off this post section and try to build stuff continously and incrementally.
 </description>
            <content type="html"><![CDATA[<p>Recently I have found the motto below very motivating,
which was quoted by one of our team members when trying to resolve a comment on his pull request.</p>
<p>So let&rsquo;s kick off this post section and try to build stuff continously and incrementally.</p>
<center>
<img src="../../../../img/quote.jpg" width = "700" alt="quote" align=center />
</center>]]></content>
        </item>
        
        <item>
            <title>Getting Started with Hugo</title>
            <link>dingdl.github.io/posts/2014/04/getting-started-with-hugo/</link>
            <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
            
            <guid>dingdl.github.io/posts/2014/04/getting-started-with-hugo/</guid>
            <description>import os from pyspark.sql import SparkSession spark = SparkSession.builder \ .master(&amp;#34;local&amp;#34;) \ .appName(&amp;#34;SparkTest&amp;#34;) \ .config(&amp;#34;k1&amp;#34;, &amp;#34;v1&amp;#34;) \ .getOrCreate() # Specify the filepath of the sample data. This requires absolute path with &amp;#39;file://&amp;#39; in the beginning folderpath = os.path.abspath(os.getcwd()) filepath = &amp;#39;&amp;#39;.join([&amp;#39;file://&amp;#39;, folderpath, &amp;#39;/SampleData.csv&amp;#39;]) Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.</description>
            <content type="html"><![CDATA[<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">
<span style="color:#f92672">import</span> os

<span style="color:#f92672">from</span> pyspark.sql <span style="color:#f92672">import</span> SparkSession

spark <span style="color:#f92672">=</span> SparkSession<span style="color:#f92672">.</span>builder \
    <span style="color:#f92672">.</span>master(<span style="color:#e6db74">&#34;local&#34;</span>) \
    <span style="color:#f92672">.</span>appName(<span style="color:#e6db74">&#34;SparkTest&#34;</span>) \
    <span style="color:#f92672">.</span>config(<span style="color:#e6db74">&#34;k1&#34;</span>, <span style="color:#e6db74">&#34;v1&#34;</span>) \
    <span style="color:#f92672">.</span>getOrCreate()



<span style="color:#75715e"># Specify the filepath of the sample data. This requires absolute path with &#39;file://&#39; in the beginning</span>
folderpath <span style="color:#f92672">=</span> os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>abspath(os<span style="color:#f92672">.</span>getcwd())
filepath <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;&#39;</span><span style="color:#f92672">.</span>join([<span style="color:#e6db74">&#39;file://&#39;</span>, folderpath, <span style="color:#e6db74">&#39;/SampleData.csv&#39;</span>])
</code></pre></div><h2 id="step-1-install-hugo">Step 1. Install Hugo</h2>
<p>Go to <a href="https://github.com/spf13/hugo/releases">Hugo releases</a> and download the
appropriate version for your OS and architecture.</p>
<p>Save it somewhere specific as we will be using it in the next step.</p>
<p>More complete instructions are available at <a href="https://gohugo.io/getting-started/installing/">Install Hugo</a></p>
<h2 id="step-2-build-the-docs">Step 2. Build the Docs</h2>
<p>Hugo has its own example site which happens to also be the documentation site
you are reading right now.</p>
<p>Follow the following steps:</p>
<ol>
<li>Clone the <a href="http://github.com/spf13/hugo">Hugo repository</a></li>
<li>Go into the repo</li>
<li>Run hugo in server mode and build the docs</li>
<li>Open your browser to http://localhost:1313</li>
</ol>
<p>Corresponding pseudo commands:</p>
<pre><code>git clone https://github.com/spf13/hugo
cd hugo
/path/to/where/you/installed/hugo server --source=./docs
&gt; 29 pages created
&gt; 0 tags index created
&gt; in 27 ms
&gt; Web Server is available at http://localhost:1313
&gt; Press ctrl+c to stop
</code></pre>
<p>Once you&rsquo;ve gotten here, follow along the rest of this page on your local build.</p>
<h2 id="step-3-change-the-docs-site">Step 3. Change the docs site</h2>
<p>Stop the Hugo process by hitting Ctrl+C.</p>
<p>Now we are going to run hugo again, but this time with hugo in watch mode.</p>
<pre><code>/path/to/hugo/from/step/1/hugo server --source=./docs --watch
&gt; 29 pages created
&gt; 0 tags index created
&gt; in 27 ms
&gt; Web Server is available at http://localhost:1313
&gt; Watching for changes in /Users/spf13/Code/hugo/docs/content
&gt; Press ctrl+c to stop
</code></pre>
<p>Open your <a href="http://vim.spf13.com">favorite editor</a> and change one of the source
content pages. How about changing this very file to <em>fix the typo</em>. How about changing this very file to <em>fix the typo</em>.</p>
<p>Content files are found in <code>docs/content/</code>. Unless otherwise specified, files
are located at the same relative location as the url, in our case
<code>docs/content/overview/quickstart.md</code>.</p>
<p>Change and save this file.. Notice what happened in your terminal.</p>
<pre><code>&gt; Change detected, rebuilding site

&gt; 29 pages created
&gt; 0 tags index created
&gt; in 26 ms
</code></pre>
<p>Refresh the browser and observe that the typo is now fixed.</p>
<p>Notice how quick that was. Try to refresh the site before it&rsquo;s finished building. I double dare you.
Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.</p>
<h2 id="step-4-have-fun">Step 4. Have fun</h2>
<p>The best way to learn something is to play with it.</p>
]]></content>
        </item>
        
    </channel>
</rss>
